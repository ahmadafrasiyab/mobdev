---
jobs:
  build_debug:
    docker:
      -
        image: "circleci/android:api-29"
    environment:
      GRADLE_OPTS: "-Dorg.gradle.jvmargs=\"-Xmx2048m\""
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    steps:
      - checkout
      -
        restore_cache:
          key: "cache-{{ checksum \"gradle/wrapper/gradle-wrapper.properties\" }}-{{ checksum \"build.gradle\" }}-{{ checksum \"app/build.gradle\" }}--{{ checksum \".circleci/config.yml\" }}"
      -
        run:
          command: "./gradlew androidDependencies"
          name: "Download dependencies"
      -
        save_cache:
          key: "cache-{{ checksum \"gradle/wrapper/gradle-wrapper.properties\" }}-{{ checksum \"build.gradle\" }}-{{ checksum \"app/build.gradle\" }}--{{ checksum \".circleci/config.yml\" }}"
          paths:
            - ~/.gradle
            - ~/.m2
      -
        run:
          command: "echo 'export GOOGLE_SERVICES_KEY=\"$GOOGLE_SERVICES_KEY\"' >> $BASH_ENV"
          name: "Export Google Services key environment variable"
      -
        run:
          command: "echo $GOOGLE_SERVICES_KEY | base64 -di > app/google-services.json"
          name: "Decode Google Services key"
      -
        run:
          command: "./gradlew -PciBuild=true :app:assembleDebug :app:assembleAndroidTest"
          name: "Gradle build (debug)"
      -
        persist_to_workspace:
          paths:
            - app/build/outputs/androidTest-results
            - app/build/outputs/apk
            - app/build/outputs/code_coverage
            - app/build/test-results
          root: ~/workspace
      -
        store_artifacts:
          destination: /apk/
          path: app/build/outputs/apk/
    working_directory: ~/workspace
  build_release:
    docker:
      -
        image: "circleci/android:api-29"
    environment:
      GRADLE_OPTS: "-Dorg.gradle.jvmargs=\"-Xmx2048m\""
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    steps:
      - checkout
      -
        restore_cache:
          key: "cache-{{ checksum \"gradle/wrapper/gradle-wrapper.properties\" }}-{{ checksum \"build.gradle\" }}-{{ checksum \"app/build.gradle\" }}--{{ checksum \".circleci/config.yml\" }}"
      -
        run:
          command: "./gradlew androidDependencies"
          name: "Download dependencies"
      -
        save_cache:
          key: "cache-{{ checksum \"gradle/wrapper/gradle-wrapper.properties\" }}-{{ checksum \"build.gradle\" }}-{{ checksum \"app/build.gradle\" }}--{{ checksum \".circleci/config.yml\" }}"
          paths:
            - ~/.gradle
            - ~/.m2
      -
        run:
          command: "echo 'export GOOGLE_SERVICES_KEY=\"$GOOGLE_SERVICES_KEY\"' >> $BASH_ENV"
          name: "Export Google Services key environment variable"
      -
        run:
          command: "echo $GOOGLE_SERVICES_KEY | base64 -di > app/google-services.json"
          name: "Decode Google Services key"
      -
        run:
          command: "./gradlew -PciBuild=true :app:assembleRelease"
          name: "Gradle build (release)"
      -
        persist_to_workspace:
          paths:
            - app/build
          root: ~/workspace
      -
        store_artifacts:
          destination: /apk/
          path: app/build/outputs/apk/
      -
        store_artifacts:
          destination: /mapping/
          path: app/build/outputs/mapping/
    working_directory: ~/workspace
  report_coverage:
    docker:
      -
        image: "circleci/android:api-29"
    environment:
      GRADLE_OPTS: "-Dorg.gradle.jvmargs=\"-Xmx2048m\""
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    steps:
      - checkout
      -
        restore_cache:
          key: "cache-{{ checksum \"gradle/wrapper/gradle-wrapper.properties\" }}-{{ checksum \"build.gradle\" }}-{{ checksum \"app/build.gradle\" }}--{{ checksum \".circleci/config.yml\" }}"
      -
        run:
          command: "./gradlew androidDependencies"
          name: "Download dependencies"
      -
        attach_workspace:
          at: ~/workspace
      -
        attach_workspace:
          at: ~/workspace
      -
        run:
          command: "mkdir -p app/build/outputs/code_coverage/debugAndroidTest/connected && cp firebase/${CIRCLE_SHA1}/Pixel2-29-en_US-portrait/artifacts/coverage.ec app/build/outputs/code_coverage/debugAndroidTest/connected/coverage.ec"
          name: "Move Firebase coverage report"
      -
        run:
          command: "echo 'export GOOGLE_SERVICES_KEY=\"$GOOGLE_SERVICES_KEY\"' >> $BASH_ENV"
          name: "Export Google Services key environment variable"
      -
        run:
          command: "echo $GOOGLE_SERVICES_KEY | base64 -di > app/google-services.json"
          name: "Decode Google Services key"
      -
        run:
          command: "./gradlew -PciBuild=true :app:jacocoTestReport"
          name: "Generate JaCoCo report"
      -
        run:
          command: "bash <(curl -s https://codecov.io/bash)"
          name: "Upload coverage report to CodeCov"
      -
        store_artifacts:
          destination: /reports/
          path: app/build/reports/
    working_directory: ~/workspace
  test_instrumented:
    docker:
      -
        image: "google/cloud-sdk:206.0.0"
    environment:
      TERM: dumb
    steps:
      -
        attach_workspace:
          at: ~/workspace
      -
        run:
          command: "echo 'export GCLOUD_SERVICE_KEY=\"$GCLOUD_SERVICE_KEY\"' >> $BASH_ENV"
          name: "Export Google Cloud Service key environment variable"
      -
        run:
          command: "echo $GCLOUD_SERVICE_KEY | base64 -di > ${HOME}/client-secret.json"
          name: "Decode Google Cloud credentials"
      -
        run:
          command: "gcloud config set project mobdev-75242"
          name: "Set Google Cloud target project"
      -
        run:
          command: "gcloud auth activate-service-account firebase-adminsdk-47j8e@mobdev-75242.iam.gserviceaccount.com --key-file ${HOME}/client-secret.json"
          name: "Authenticate with Google Cloud"
      -
        run:
          command: "echo ${CIRCLE_SHA1}"
          name: "Echo sha1 variable for debugging"
      -
        run:
          command: "gcloud firebase test android run --type instrumentation --app app/build/outputs/apk/debug/app-debug.apk --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk --device model=Pixel2,version=29,locale=en_US,orientation=portrait --no-use-orchestrator --environment-variables coverage=true,coverageFile=\"/sdcard/coverage.ec\" --directories-to-pull=/sdcard --timeout 20m --results-dir=${CIRCLE_SHA1}"
          name: "Run instrumented test on Firebase Test Lab"
      -
        run:
          command: "mkdir firebase"
          name: "Create directory to store test results"
      -
        run:
          command: "gsutil -m cp -r -U gs://YOUR-GCLOUD-ID/${CIRCLE_SHA1} /root/workspace/firebase/"
          name: "Download instrumented test results from Firebase Test Lab"
      -
        persist_to_workspace:
          paths:
            - firebase
          root: ~/workspace
      -
        store_artifacts:
          destination: /firebase/
          path: firebase/
    working_directory: ~/workspace
  test_unit:
    docker:
      -
        image: "circleci/android:api-29"
    environment:
      GRADLE_OPTS: "-Dorg.gradle.jvmargs=\"-Xmx2048m\""
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    steps:
      - checkout
      -
        restore_cache:
          key: "cache-{{ checksum \"gradle/wrapper/gradle-wrapper.properties\" }}-{{ checksum \"build.gradle\" }}-{{ checksum \"app/build.gradle\" }}--{{ checksum \".circleci/config.yml\" }}"
      -
        run:
          command: "./gradlew androidDependencies"
          name: "Download dependencies"
      -
        save_cache:
          key: "cache-{{ checksum \"gradle/wrapper/gradle-wrapper.properties\" }}-{{ checksum \"build.gradle\" }}-{{ checksum \"app/build.gradle\" }}--{{ checksum \".circleci/config.yml\" }}"
          paths:
            - ~/.gradle
            - ~/.m2
      -
        run:
          command: "echo 'export GOOGLE_SERVICES_KEY=\"$GOOGLE_SERVICES_KEY\"' >> $BASH_ENV"
          name: "Export Google Services key environment variable"
      -
        run:
          command: "echo $GOOGLE_SERVICES_KEY | base64 -di > app/google-services.json"
          name: "Decode Google Services key"
      -
        run:
          command: "./gradlew -PciBuild=true :app:testDebugUnitTest"
          name: "Run unit tests"
      -
        persist_to_workspace:
          paths:
            - app/build/outputs/androidTest-results
            - app/build/outputs/apk
            - app/build/outputs/code_coverage
            - app/build/test-results
          root: ~/workspace
      -
        store_artifacts:
          destination: /reports/
          path: app/build/reports/
      -
        store_test_results:
          destination: /test-results/
          path: app/build/test-results/
    working_directory: ~/workspace
references:
  android_config:
    docker:
      -
        image: "circleci/android:api-29"
    environment:
      GRADLE_OPTS: "-Dorg.gradle.jvmargs=\"-Xmx2048m\""
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    working_directory: ~/workspace
  attach_debug_workspace:
    attach_workspace:
      at: ~/workspace
  attach_firebase_workspace:
    attach_workspace:
      at: ~/workspace
  attach_release_workspace:
    attach_workspace:
      at: ~/workspace
  cache_key:
    key: "cache-{{ checksum \"gradle/wrapper/gradle-wrapper.properties\" }}-{{ checksum \"build.gradle\" }}-{{ checksum \"app/build.gradle\" }}--{{ checksum \".circleci/config.yml\" }}"
  decode_gcloud_key:
    run:
      command: "echo $GCLOUD_SERVICE_KEY | base64 -di > ${HOME}/client-secret.json"
      name: "Decode Google Cloud credentials"
  decode_gservices_key:
    run:
      command: "echo $GOOGLE_SERVICES_KEY | base64 -di > app/google-services.json"
      name: "Decode Google Services key"
  export_gcloud_key:
    run:
      command: "echo 'export GCLOUD_SERVICE_KEY=\"$GCLOUD_SERVICE_KEY\"' >> $BASH_ENV"
      name: "Export Google Cloud Service key environment variable"
  export_gservices_key:
    run:
      command: "echo 'export GOOGLE_SERVICES_KEY=\"$GOOGLE_SERVICES_KEY\"' >> $BASH_ENV"
      name: "Export Google Services key environment variable"
  gcloud_config:
    docker:
      -
        image: "google/cloud-sdk:206.0.0"
    environment:
      TERM: dumb
    working_directory: ~/workspace
  persist_debug_workspace:
    persist_to_workspace:
      paths:
        - app/build/outputs/androidTest-results
        - app/build/outputs/apk
        - app/build/outputs/code_coverage
        - app/build/test-results
      root: ~/workspace
  persist_firebase_workspace:
    persist_to_workspace:
      paths:
        - firebase
      root: ~/workspace
  persist_release_workspace:
    persist_to_workspace:
      paths:
        - app/build
      root: ~/workspace
  restore_cache:
    restore_cache:
      key: "cache-{{ checksum \"gradle/wrapper/gradle-wrapper.properties\" }}-{{ checksum \"build.gradle\" }}-{{ checksum \"app/build.gradle\" }}--{{ checksum \".circleci/config.yml\" }}"
  save_cache:
    save_cache:
      key: "cache-{{ checksum \"gradle/wrapper/gradle-wrapper.properties\" }}-{{ checksum \"build.gradle\" }}-{{ checksum \"app/build.gradle\" }}--{{ checksum \".circleci/config.yml\" }}"
      paths:
        - ~/.gradle
        - ~/.m2
  workspace: ~/workspace
version: 2
workflows:
  version: 2
  workflow:
    jobs:
      - build_debug
      - build_release
      - test_unit
      -
        test_instrumented:
          requires:
            - build_debug
      -
        report_coverage:
          requires:
            - build_release
            - test_unit
            - test_instrumented
